#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>

int main(int argc,char **argv) {

  int  sock, nbytes;
  char rbuf[1024];
  struct sockaddr_in host;
  struct hostent    *hp;

  if (argc != 2) {
    fprintf(stderr,"Usage: %s hostname \n",argv[0]);
    exit(1);
  }

  /* ソケットの生成 */
  if ((sock=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP))<0) {
    perror("socket");
    exit(1);
  }

  /* host(ソケットの接続先) の情報設定 */
  bzero(&host,sizeof(host));
  host.sin_family      = AF_INET;
  host.sin_addr.s_addr = htonl(INADDR_ANY);
  host.sin_port        = htons(10120);

  if ((hp = gethostbyname(argv[1])) == NULL) {
    fprintf(stderr,"unknown host %s\n",argv[1]);
    exit(2);
  }

  bcopy(hp->h_addr,&host.sin_addr,hp->h_length);  

  /* サーバーに接続 */
  if (connect(sock, (struct sockaddr*)&host, sizeof(host)) < 0) {
    perror("connect");
    exit(3);
  }
  
  do {
    /* クライアントへのメッセージ送信 */
    if ((nbytes = read(0, rbuf, sizeof(rbuf))) < 0) {
      perror("send");
    } else {
      write(sock, rbuf, nbytes);
    }

    if (nbytes != 0 ) {
      /* クライアントからのメッセージ受信 */
      if ((nbytes = read(sock, rbuf, sizeof(rbuf)) ) < 0 ) {
	perror("reseive");
      } else {
	write(1, rbuf, nbytes);	
      }
    }
  } while (nbytes != 0);

  
  close(sock);
  printf("closed\n");
}
