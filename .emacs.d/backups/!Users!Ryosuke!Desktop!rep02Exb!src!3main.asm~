;*******************************************************************
;* This stationery serves as the framework for a user application. *
;* For a more comprehensive program that demonstrates the more     *
;* advanced functionality of this processor, please see the        *
;* demonstration applications, located in the examples             *
;* subdirectory of the "Freescale CodeWarrior for HC08" program    *
;* directory.                                                      *
;*******************************************************************

; Include derivative-specific definitions
            INCLUDE 'derivative.inc'

; export symbols
            XDEF _Startup, main
            ; we export both '_Startup' and 'main' as symbols. Either can
            ; be referenced in the linker .prm file or from C/C++ later on

            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


; variable/data section
MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition
COUNT:          DS 1
INDEX:            DS 1

ZERO:             DS 1
ONE:              DS 1
TWO:              DS 1
THREE:            DS 1
FOUR:             DS 1
FIVE:               DS 1
SIX:                DS 1
SEVEN:            DS 1

; code section
MyCode:     SECTION
main:
_Startup:
            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
            TXS
            CLI                     ; enable interrupts
            
            LDA #00000000b       ;PTAを入力に
            STA PTADD        
            LDA #11111111b      ;PTBを出力に
            STA PTBDD

            LDA #0
            STA COUNT
            STA INDEX
            
            LDHX #0h
            
            LDA #01000000b         ;LEDパターン記録
            STA ZERO
            LDA #11111001b
            STA ONE
            LDA #00100100b
            STA TWO
            LDA #00110000b
            STA THREE
            LDA #00011001b
            STA FOUR
            LDA #00010010b
            STA FIVE
            LDA #00000010b
            STA SIX
            LDA #01111000b
            STA SEVEN                                                            
            
waitC:                                  ;コンデンサの充電を待つ
            LDA PTAD
            AND #00000001b
            BEQ waitC
            
            LDA ZERO      ;[0]を出力
            STA PTBD
            

mainLoop:

waitSw1On:
            feed_watchdog                        
            LDA PTAD
            AND #00000001b
            BEQ waitSw1Off
            BRA waitSw1On

waitSw1Off:
            feed_watchdog
            LDA PTAD
            AND #00000001b
            BEQ waitSw1Off
            
Sw1Off:
           LDA PTAD              
           LSRA
           AND #00000111b      ; ディップスイッチの値を読み取る
           STA INDEX
           LDX INDEX
           LDA ZERO, X            ; 対応する数を表示
           STA PTBD
           BRA mainLoop
           
           feed_watchdog
           BRA    mainLoop
