#include <stdio.h>
#include <signal.h>
#include <stdlib.h>

#define BUFSIZE 256
#define TIMEOUT 3

void myalarm(int sec) {

    int i, pid, status;

    // alarm(sec);

    if ((pid=fork())== -1) {
        perror("fork failed.");
        exit(1);
    }

    if (pid == 0) { /* Child process */
        sleep(sec);
        if (kill(0, SIGALRM) == -1) {
            perror("kill failed.");
            exit(1);
        }
        exit(0);

    } else { /* Parent process */

        if (kill(-1, SIGTERM) == -1) {
            perror("kill failed.");
            exit(1);
        }
        /* 子プロセスの終了を無視*/
        if(signal(SIGCHLD, SIG_IGN) == SIG_ERR) {
            perror("signal failed.");
            exit(1);
        }
    }
}

void timeout() {

    printf("This program is timeout.\n");
    exit(0);
}

int main() {

    char buf[BUFSIZE];

    if(signal(SIGALRM,timeout) == SIG_ERR) {
        perror("signal failed.");
        exit(1);
    }

    myalarm(TIMEOUT);

    while (fgets(buf, BUFSIZE, stdin) != NULL) {
        printf("echo: %s",buf);
        myalarm(TIMEOUT);
    }
}
