	;*******************************************************************
	;* This stationery serves as the framework for a user application. *
	;* For a more comprehensive program that demonstrates the more     *
	;* advanced functionality of this processor, please see the        *
	;* demonstration applications, located in the examples             *
	;* subdirectory of the "Freescale CodeWarrior for HC08" program    *
	;* directory.                                                      *
	;*******************************************************************

	; Include derivative-specific definitions
	            INCLUDE 'derivative.inc'

	; export symbols
	            XDEF _Startup, main
	            ; we export both '_Startup' and 'main' as symbols. Either can
	            ; be referenced in the linker .prm file or from C/C++ later on

	            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


	; variable/data section
	MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition
	COUNT:          DS 1

	; code section
	MyCode:     SECTION
	main:
	_Startup:
	            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
	            TXS
	            CLI                     ; enable interrupts

	            LDA #00000000b       ;PTAを入力に
	            STA PTADD

	            LDA #11111111b      ;PTBを出力に
	            STA PTBDD

	            LDA #01000000b       ;[0]を出力
	            STA PTBD

	            LDA #00000000b
	            STA COUNT

	waitC:
	            LDA PTAD
	            AND #00000001b
	            BEQ waitC


	mainLoop:

	waitSw1On:
	            feed_watchdog
	            LDA PTAD
	            AND #00000001b
	            BEQ waitSw1Off
	            BRA waitSw1On

	waitSw1Off:
	            feed_watchdog
	            LDA PTAD
	            AND #00000001b
	            BEQ waitSw1Off
	            BRA Sw1Off

	Sw1Off:
	           LDA COUNT
	           INCA
	           STA COUNT              ; COUNT++

	           CMP #00000001b
	           BEQ One
	           CMP #00000010b
	           BEQ Two
	           CMP #00000011b
	           BEQ Three
	           CMP #00000100b
	           BEQ Four
	           BRA mainLoop

	One:
	            LDA #11111001b       ;[1]を出力
	            STA PTBD
	           BRA mainLoop
	Two:
	            LDA #01000000b       ;[0]を出力
	            STA PTBD
	           BRA mainLoop
	Three:
	           LDA #00011001b        ;[4]を出力
	           STA PTBD
	           BRA mainLoop
	Four:
	           LDA #00011001b        ;[4]を出力
	           STA PTBD
	           LDA #00000000b
	           STA COUNT              ;COUNT = 0
	           BRA mainLoop


	            feed_watchdog
	            BRA    mainLoop
