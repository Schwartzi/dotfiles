use "/Users/Ryosuke/pro-d/sml_kadai/lib.sml";

fun compute2 s mapL =
    let

        fun isBASE c =
            isInt c orelse isAlp c orelse c = "("

        fun findValue s (nil : (string * int) list) = raise NotDefined
          | findValue s (h::t) =
            if #1 h = s then
                #2 h
            else
                findValue s t;

        fun EXP nil    = raise SyntaxError
          | EXP (h::t) =
            if isBASE h then
                let
                    val (v1, t1) = TERM(h::t)
                in
                    if      t1 = nil then
                        (v1, t1)
                    else if (((hd t1) = "+") orelse ((hd t1) = "-")) then
                        let
                            val (v2, t2) = TERM(tl t1)
                        in
                            if      (hd t1) = "+" then
                                (v1 + v2, t2)
                            else if (hd t1) = "-" then
                                (v1 - v2, t2)
                            else raise SyntaxError
                        end
                    else raise SyntaxError
                end
            else raise SyntaxError

        and TERM nil    = raise SyntaxError
          | TERM (h::t) =
            if isBASE h then
                let
                    val (v1, t1) = BASE(h::t)
                in
                    if      t1 = nil then
                        (v1, t1)
                    else if (((hd t1) = "*") orelse ((hd t1) = "/")) then
                        let
                            val (v2, t2) = BASE (tl t1)
                        in
                            if      (hd t1) = "*" then
                                (v1  *  v2, t2)
                            else if (hd t1) = "/" then
                                (v1 div v2, t2)
                            else raise SyntaxError
                        end
                    else (v1, t1)
                end
            else raise SyntaxError

        and BASE nil    = raise SyntaxError
          | BASE (h::t) =
            if      isInt h then
                (toInt h, t)
            else if isAlp h then
                (findValue h mapL, t)
            else if h = "(" then
                let
                    val (v1, t1) = EXP t
                in
                    if (hd t1) = ")" then
                        (v1, tl t1)
                    else raise SyntaxError
                end
            else raise SyntaxError

    in
        let
            val (result,rest) = EXP (separate s)
        in
            if rest = nil then result
            else raise SyntaxError
        end
    end;

compute2 " ( 1 + a ) * ( b + 3 * ( c + 2 ) )" [("a", 1), ("b", 2), ("c", 3)];
